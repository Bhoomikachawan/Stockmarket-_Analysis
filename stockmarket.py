# -*- coding: utf-8 -*-
"""Stockmarket.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dJ89S8Xt6UFtkOJaYETwT5KB26gMdzZl
"""



import tensorflow as tf
print("TensorFlow version:", tf.__version__)

!pip install -q yfinance

# Commented out IPython magic to ensure Python compatibility.
import pandas as panda
import numpy as nump

import matplotlib.pyplot as pylt
import seaborn as seans
seans.set_style('whitegrid')
pylt.style.use("fivethirtyeight")
# %matplotlib inline

from pandas_datareader.data import DataReader
import yfinance as yf

from datetime import datetime

# The tech stocks we'll use for this analysis
technicalList = ['AAPL', 'GOOG', 'MSFT', 'AMZN']

# Set up End and starting times for data grab
technicalList = ['AAPL', 'GOOG', 'MSFT', 'AMZN']

ending = datetime.now()
starting = datetime(ending.year - 1, ending.month, ending.day)

for stock in technicalList:
    globals()[stock] = yf.download(stock, starting, ending)

company_list = [AAPL, GOOG, MSFT, AMZN]
company_name = ["APPLE", "GOOGLE", "MICROSOFT", "AMAZON"]

for company, com_name in zip(company_list, company_name):
    company["company_name"] = com_name

dataFrame = panda.concat(company_list, axis=0)
dataFrame.tail(10)

AAPL.describe()

#General info
AAPL.info()

dataFrame.isnull().sum()

AAPL.isnull().sum()

pylt.figure(figsize=(15, 6))
pylt.subplots_adjust(top=1.25, bottom=1.2)

for i, company in enumerate(company_list, 1):
  pylt.subplot(2, 2, i)
  company['Adj Close'].plot()
  pylt.ylabel('Adj Close')
  pylt.xlabel(None)
  pylt.title(f"Closing Price of {technicalList[i-1]}")

pylt.tight_layout()

pylt.figure(figsize=(15, 7))
pylt.subplots_adjust(top=1.25, bottom=1.2)

for i, company in enumerate(company_list, 1):
    pylt.subplot(2, 2, i)
    company['Volume'].plot()
    pylt.ylabel('Volume')
    pylt.xlabel(None)
    pylt.title(f"Sales Volume for {technicalList[i - 1]}")

pylt.tight_layout()



my_dayy = [10, 20, 50]

for ma in my_dayy:
  for company in company_list:
    coloumn_name = f"MA for {ma} days"
    company[coloumn_name] = company['Adj Close'].rolling(ma).mean()

fig, axes = pylt.subplots(nrows=2, ncols=2)
fig.set_figheight(8)
fig.set_figwidth(15)

AAPL[['Adj Close', 'MA for 10 days', 'MA for 20 days', 'MA for 50 days']].plot(ax=axes[0,0])
axes[0,0].set_title('APPLE')

GOOG[['Adj Close', 'MA for 10 days', 'MA for 20 days', 'MA for 50 days']].plot(ax=axes[0,1])
axes[0,1].set_title('GOOGLE')

MSFT[['Adj Close', 'MA for 10 days', 'MA for 20 days', 'MA for 50 days']].plot(ax=axes[1,0])
axes[1,0].set_title('MICROSOFT')

AMZN[['Adj Close', 'MA for 10 days', 'MA for 20 days', 'MA for 50 days']].plot(ax=axes[1,1])
axes[1,1].set_title('AMAZON')

fig.tight_layout()

for company in company_list:
    company['Daily Return'] = company['Adj Close'].pct_change()

# Then we'll plot the daily return percentage
fig, axes = pylt.subplots(nrows=2, ncols=2)
fig.set_figheight(8)
fig.set_figwidth(15)

AAPL['Daily Return'].plot(ax=axes[0,0], legend=True, linestyle='--', marker='o')
axes[0,0].set_title('APPLE')

GOOG['Daily Return'].plot(ax=axes[0,1], legend=True, linestyle='--', marker='o')
axes[0,1].set_title('GOOGLE')

MSFT['Daily Return'].plot(ax=axes[1,0], legend=True, linestyle='--', marker='o')
axes[1,0].set_title('MICROSOFT')

AMZN['Daily Return'].plot(ax=axes[1,1], legend=True, linestyle='--', marker='o')
axes[1,1].set_title('AMAZON')

fig.tight_layout()

pylt.figure(figsize=(12, 7))

for i, company in enumerate(company_list, 1):
    pylt.subplot(2, 2, i)
    company['Daily Return'].hist(bins=50)
    pylt.ylabel('Daily Return')
    pylt.title(f'{company_name[i - 1]}')

pylt.tight_layout()